(function ($) {
//#######################################################
// This is the universal javascript. Nothing should be 
// loaded until everything has been downloaded.

var currentScreen, chart, salary, gender, age, surpassedAmount, targetIncomeMinusState, statePension, currentPension, employeeContribPercent, employerContribPercent,employeeContribAmt, employerContribAmt, targetPercent, delay, targetIncome, retirementAge,extraContributionsRequired;
var annualPension = 0;
var ap = 0;
var premium = 0;
employerContribAmt = 0;
employeeContribAmt = 0;






$(window).load(function () {
// when js has loaded run foundation
    $(document).foundation();
     currentScreen = 1;
    age = 40; // slider
    salary = "40000"; // input
    gender = "male"; // checkbox
    statePension = "true"; // slider
    currentPension=0; // input
    employeeContribPercent= 0; // slider
    employerContribPercent=0; // slider
    targetPercent=66; // slider
    delay = 0; // slider
    loadSliders();
    $( "#pensionCalcAgeSliderOutput" ).html( age );
    updateCalculator();

    $("#ShowWarnings").toggle(function(event){
      $("#warningsInfo").slideDown();
    },
    function(){
      $("#warningsInfo").slideUp();
    });

    $("#ShowTaxRelief").toggle(function(event){
      $("#TaxReliefInfo").slideDown();
    },
    function(){
      $("#TaxReliefInfo").slideUp();
    });

    $("#ShowAssumptions").toggle(function(event){
      $("#AssumptionsInfo").slideDown();
    },
    function(){
      $("#AssumptionsInfo").slideUp();
    });


    $("#ShowPrivacy").toggle(function(event){
      $("#PrivacyInfo").slideDown();
    },
    function(){
      $("#PrivacyInfo").slideUp();
    });


    $("#ShowQandA").toggle(function(event){
      $("#QandAInfo").slideDown();
    },
    function(){
      $("#QandAInfo").slideUp();
    });

    $("#open").click(function(){
        $("#splash").fadeOut("500",function(){
            if (typeof  _gaq != 'undefined'){
             _gaq && _gaq.push(['_trackEvent','Enter Screen','Open calc button clicked','Splash screen']); 
            }
            $("#pension-app").fadeIn();
        });
    });

    $("#resultsBckBtn").click(function(){
        $("#screen5").fadeOut("500",function(){
            $(".progressImg").fadeIn();
            $("#screen4").fadeIn();
            $("#prevBtn").show();
            $("#callback").show();
        });
    });
     
    
    $("#closeBubble").click(function(){
        $( ".bubble" ).animate({"width": "0px", "height":"0px"}, "slow" );
        $( ".bubble" ).css("display","none");
    });

    $("#callback").click(function(){
        _gaq && _gaq.push(['_trackEvent','Enter Screen','Callback modal callback button','email sent']); 
        emailInfo();
    });

    $("#screenLoadingPage").css('height', "" + $("#screen1").height() + "px");
    $(".center").css('margin-top', "" + ($("#screen1").height()/2) - 40 + "px");

});

var prevSal;
    $('#salaryInput').bind('change keyup', function() {
        var mySal = $('#salaryInput').val();
        var regx = /^[0-9]+$/;
        if (!regx.test(mySal)) {
            $('#salaryInput').val(prevSal);
            if(prevSal.length==1){
            $('#salaryInput').val("");
            }
        } else {
            if (mySal > 200000) {
                $('#salaryInput').val("200000");
                prevSal = "200000";
                $('#salaryInputError').show();
                $('#salaryInputError').html("Max is â‚¬200,000");
            } else {
                prevSal = mySal;
                $(this).removeClass('error');
                $('#salaryInputError').hide();
            }
        }
        setSalary();
    });
    
    
/*
#######################################
    Update All screen's based on the 
    changes to the global variables like
    age, or salary.
#######################################
*/
updateCalculator = function (){
    // Every screen element to be updated here. 
    // Based on every global var setting
    
        $( "#pensionCalcEmployeeContributionsSlider" ).slider('value', employeeContribPercent);
        $( "#pensionCalcEmployerContributionsSlider" ).slider('value', employerContribPercent);
        $( "#pensionCalcAgeSlider" ).slider('value', age);
        $( "#pensionCalcTargetSlider" ).slider('value', targetPercent);
        $( "#pensionCalcDelaySlider" ).slider('value', delay);
        $( "#pensionCalcEmployeeContributionsFinalSlider" ).slider('value', employeeContribPercent);

        setSalary();
        setCurrentPension();
}
//#########################################


/*#######################################
    Update the global salary number with
    the value from the input
#######################################*/
setSalary = function(){
    salary = $('#salaryInput').val();
    $('.barLineTotalText').html("&euro; "+addCommas(Math.round(salary*(targetPercent/100))));
}
setCurrentPension = function(){
    currentPension = parseInt($('#currentPensionInput').val()) || 0;
}

//################
// List to the switching of the state pension button

$('input:radio[name="statePension"]').change(
    function(){
        if ($(this).is(':checked') && $(this).attr("id") == 'statePensionYes') {
            statePension = "True"
        }
        else {
            statePension = "False"
        }
    }
);

/*
#######################################
    Add commas to the numbers
#######################################
*/
function addCommas(nStr) {
    nStr += '';
    x = nStr.split('.');
    x1 = x[0];
    x2 = x.length > 1 ? '.' + x[1] : '';
    var rgx = /(\d+)(\d{3})/;
    while (rgx.test(x1)) {
        x1 = x1.replace(rgx, '$1' + ',' + '$2');
    }
    return x1 + x2;
}


loadSliders = function(){
    $( "#pensionCalcAgeSlider" ).slider({
        handle: '#slider-handle',range:"min",animate: true,value:0,min: 20,max: 60,step: 1,
        slide: function( event, ui ) {
            $( "#pensionCalcAgeSliderOutput" ).html( ui.value ).addClass("sliderActive");
        },
        change: function(e,ui) {
            age = ui.value;
            $( "#pensionCalcAgeSliderOutput" ).html( ui.value )
            
        },
        start: function(e,ui){
            $( "#pensionCalcAgeSliderOutput" ).html( ui.value );
        },
        stop: function(e,ui){
            age = ui.value; // set the global age var
           // hideLargeOutput();
            $( "#pensionCalcAgeSliderOutput" ).html( ui.value ).removeClass("sliderActive");
        }
        

    });
    
     
/*
#######################################################################
    Your Contributions Slider [SCREEN 1]
#######################################################################
*/
    $( "#pensionCalcEmployeeContributionsSlider" ).slider({

        handle: '#slider-handle',range:"min",animate: true,value:0,min: 0,max: 25,step: 1,
        slide: function( event, ui ) {
            var outterAnnual = addCommas(Math.round((ui.value/100)*salary));
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            
            $( "#pensionCalcEmployeeContributionsSliderOutput" ).html("&euro; "+outterMonth ).addClass("sliderActive");
            $( "#pensionCalcEmployeeContributionsSliderOutputSubA" ).html( ui.value +"% of your salary" ).addClass("sliderActive");
            $( "#pensionCalcEmployeeContributionsSliderOutputSubB" ).html( "Annually: &euro; "+outterAnnual ).addClass("sliderActive");
        },
        change: function (e,ui){
            // Use the change function to update the values on the screen.
            // When called programatically it triggers this change event.
            var outterAnnual = addCommas(Math.round((ui.value/100)*salary));
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            
            $( "#pensionCalcEmployeeContributionsSliderOutput" ).html("&euro; "+outterMonth ).removeClass("sliderActive");
            $( "#pensionCalcEmployeeContributionsSliderOutputSubA" ).html( ui.value +"% of your salary" ).removeClass("sliderActive");
            $( "#pensionCalcEmployeeContributionsSliderOutputSubB" ).html( "Annually: &euro; "+outterAnnual ).removeClass("sliderActive");
        },
        start: function(e,ui){
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            $( "#pensionCalcEmployeeContributionsSliderOutput" ).html("&euro; "+outterMonth );
        },
        stop: function(e,ui){
            employeeContribPercent = ui.value; // set the global employee contribution percenta value
            employeeContribAmt = Math.round( (employeeContribPercent /1200) * salary);
        }
    });
    
    
    
    $( "#pensionCalcEmployerContributionsSlider" ).slider({
        handle: '#slider-handle',range:"min",animate: true,value:0,min: 0,max: 25,step: 1,
        slide: function( event, ui ) {
        
            var outterAnnual = addCommas(Math.round((ui.value/100)*salary));
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            $( "#pensionCalcEmployerContributionsSliderOutput" ).html("&euro; "+ outterMonth ).addClass("sliderActive");
            $( "#pensionCalcEmployerContributionsSliderOutputSubA" ).html( ui.value +"% of your salary" ).addClass("sliderActive");
            $( "#pensionCalcEmployerContributionsSliderOutputSubB" ).html( "Annually: &euro; "+outterAnnual ).addClass("sliderActive");
            
           // updateLargeOutput("&euro;"+outterMonth);
        },
        change: function (e,ui){
            // Use the change function to update the values on the screen.
            // When called programatically it triggers this change event.
            var outterAnnual = addCommas(Math.round((ui.value/100)*salary));
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            $( "#pensionCalcEmployerContributionsSliderOutput" ).html("&euro; "+outterMonth ).removeClass("sliderActive");
            $( "#pensionCalcEmployerContributionsSliderOutputSubA" ).html( ui.value +"% of your salary" ).removeClass("sliderActive");
            $( "#pensionCalcEmployerContributionsSliderOutputSubB" ).html( "Annually: &euro; "+outterAnnual ).removeClass("sliderActive");
            
            $('#pensionCalcEmployeeContribOutputFinal').html("&euro; "+outterMonth);
            
            // How to call it...
            // $( "#pensionCalcEmployerContributionsSlider" ).slider('value', 3);
        },
        start: function(e,ui){
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            //updateLargeOutput("&euro;"+outterMonth);
             
        },
        stop: function(e,ui){
            //hideLargeOutput();
            employerContribPercent = ui.value; // set the global employee contribution percenta value
            employerContribAmt = Math.round( (employerContribPercent /1200) * salary);
        }
    });

   /*#####################################################################################
        This is the target slider on screen 2
    #####################################################################################
    */
    
    $( "#pensionCalcTargetSlider" ).slider({
        handle: '#slider-handle',range:"min",animate: true,value:0,min: 20,max: 100,step: 1,
        slide: function( event, ui ) {        
        
            var outterTarget = addCommas(Math.round((ui.value/1200)*salary));
            var outterTargetAnn = addCommas(Math.round((ui.value/100)*salary));
            $('#pensionCalcTargetSliderOutput').html("&euro; "+outterTarget + " per month, in today's terms").addClass("sliderActive");
            
            $( "#pensionCalcTargetSliderOutputSubA" ).html( ui.value +"% of your salary" ).addClass("sliderActive");
            $( "#pensionCalcTargetSliderOutputSubB" ).html( "Annually: &euro; "+outterTarget ).addClass("sliderActive");
            $( "#pensionCalcTargetSliderOutputSubB" ).html( "Annually: &euro; "+outterTargetAnn).addClass("sliderActive");
            
            //updateLargeOutput("&euro;"+outterTarget);
        },
        change: function(e,ui){
            var outterTarget = addCommas(Math.round((ui.value/1200)*salary));
            var outterTargetAnn = addCommas(Math.round((ui.value/100)*salary));
            
            targetPercent = ui.value;
            targetIncome = (targetPercent*salary)/100;
            $('#pensionCalcTargetSliderOutput').html("&euro; "+outterTarget + " per month, in today's terms").removeClass("sliderActive");
            
            $( "#pensionCalcTargetSliderOutputSubA" ).html( ui.value +"% of your salary" ).removeClass("sliderActive");
            $( "#pensionCalcTargetSliderOutputSubB" ).html( "Annually: &euro; "+outterTarget ).removeClass("sliderActive");
            $( "#pensionCalcTargetSliderOutputSubB" ).html( "Annually: &euro; "+outterTargetAnn).removeClass("sliderActive");
            $( ".pensionCalcTargetSetOutput" ).html( "&euro;"+outterTargetAnn+" per year");
        },
        start: function(e,ui){
            var outterTarget = addCommas(Math.round((ui.value/1200)*salary));
            var outterTargetAnn = addCommas(Math.round((ui.value/100)*salary));
            
            $('#pensionCalcTargetSliderOutput').html("&euro; "+outterTarget + " per month, in today's terms");
            $( "#pensionCalcTargetSliderOutputSubA" ).html( ui.value +"% of your salary" );
            $( "#pensionCalcTargetSliderOutputSubB" ).html( "Annually: &euro; "+outterTargetAnn);

         //   updateLargeOutput("&euro;"+outterTarget);
            $( ".pensionCalcTargetSetOutput" ).html( "&euro;"+outterTargetAnn+" per year");
        },
        stop: function(e,ui){
             $('#pensionCTSliderEmployerConResult').css('background-color','#fff');
             $('#pensionCTSliderEmployerConResult').css('color','#82a623');
            targetPercent = ui.value;
            targetIncome = (targetPercent*salary)/100;
         //   hideLargeOutput();
        }
    });


    /*
    #####################################################################################
        On screen 3 are the last 2 sliders, one for delay and one for the employee
        contributions which has already been set. Keep these 2 in sync.
    #####################################################################################
    */
    $( "#pensionCalcDelaySlider" ).slider({
        handle: '#slider-handle',range:"min",animate: true,value:delay,min: 0,max: 15,step: 1,
        slide: function( event, ui ) {
            delay = Math.floor(ui.value);
            if (delay == 0)
            {
                $( "#pensionCalcDelaySliderOutput" ).html("TODAY").addClass("sliderActive");
                $( "#pensionCalcDelayAgeSliderOutput" ).html("Your age: "+age).addClass("sliderActive");
           //     updateLargeOutput("TODAY");
            }
            else{
                $( "#pensionCalcDelaySliderOutput" ).html("In "+delay+" years").addClass("sliderActive");
                $( "#pensionCalcDelayAgeSliderOutput" ).html("Your age: "+(delay+age)).addClass("sliderActive");
            //    updateLargeOutput(delay+" years");
            }
            
        },
        start: function(e,ui){
       //     showLargeOutput();
        },
        change: function(e,ui){
            delay = Math.floor(ui.value);
            if (delay == 0)
            {
                $( "#pensionCalcDelaySliderOutput" ).html("TODAY").removeClass("sliderActive");
                $( "#pensionCalcDelayAgeSliderOutput" ).html("Your age: "+age).removeClass("sliderActive");
            }
            else{
                $( "#pensionCalcDelaySliderOutput" ).html("In "+delay+" years").removeClass("sliderActive");
                $( "#pensionCalcDelayAgeSliderOutput" ).html("Your age: "+(delay+age)).removeClass("sliderActive");
            }
        },
        stop: function(e,ui){
             annualPensionQuote();
        }
    });
    
    $( "#pensionCalcEmployeeContributionsFinalSlider" ).slider({
        handle: '#slider-handle',range:"min",animate: true,value:employeeContribPercent,min: 0,max: 25,step: 1,
        slide: function( event, ui ) {
            var outterAnnual = addCommas(Math.round((ui.value/100)*salary));
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            
            $( "#pensionCalcEmployeeContributionsFinalSliderOutput" ).html("&euro; "+outterMonth ).addClass("sliderActive");
            $( "#pensionCalcEmployeeContributionsFinalSliderOutputSubA" ).html( ui.value +"% of your salary" ).addClass("sliderActive");
            $( "#pensionCalcEmployeeContributionsFinalSliderOutputSubB" ).html( "Annually: &euro; "+outterAnnual ).addClass("sliderActive");
            $( "#pensionCalcTotalContribOutputFinal").html("&euro; "+Math.round(parseInt(employerContribAmt)+parseInt(outterMonth.replace(/,/g,'')))).addClass("sliderActive");
                // updateLargeOutput("&euro;"+outterMonth);
        },
        change: function (e,ui){
            // Use the change function to update the values on the screen.
            // When called programatically it triggers this change event.
            var outterAnnual = addCommas(Math.round((ui.value/100)*salary));
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            
            $( "#pensionCalcEmployeeContributionsFinalSliderOutput" ).html("&euro; "+outterMonth ).removeClass("sliderActive");
            $( "#pensionCalcEmployeeContributionsFinalSliderOutputSubA" ).html( ui.value +"% of your salary" ).removeClass("sliderActive");
            $( "#pensionCalcEmployeeContributionsFinalSliderOutputSubB" ).html( "Annually: &euro; "+outterAnnual ).removeClass("sliderActive");
            
            //$( "#pensionCalcTotalContribOutputFinal").html("&euro; "+Math.round(parseInt(employerContribAmt)+parseInt(outterMonth))).removeClass("sliderActive");
            
            // How to call it...
            // $( "#pensionCalcEmployeeContributionsFinalSlider" ).slider('value', 3);
        },
        start: function(e,ui){
            $('#placeholderOverlay').show();
          //  setSalary();
          //  showLargeOutput();
            
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            $( "#pensionCalcEmployeeContributionsFinalSliderOutput" ).html("&euro; "+outterMonth );
            $( "#pensionCalcTotalContribOutputFinal").html("&euro; "+Math.round(parseInt(employerContribAmt)+parseInt(outterMonth.replace(/,/g,''))));
         //   updateLargeOutput("&euro;"+outterMonth);
             
        },
        stop: function(e,ui){
         //   hideLargeOutput();
            var outterMonth = addCommas(Math.round((ui.value/1200)*salary));
            employeeContribPercent = ui.value; // set the global employee contribution percenta value#
            employeeContribAmt = Math.round( (employeeContribPercent /1200) * salary);
             $( "#pensionCalcTotalContribOutputFinal").html("&euro; "+Math.round(parseInt(employerContribAmt)+parseInt(outterMonth.replace(/,/g,'')))).removeClass("sliderActive");;
             $( "#pensionCalcEmployeeContributionsSlider" ).slider('value', employeeContribPercent);
             annualPensionQuote();
         //    updateChartData();
        }
    });
}

    $('#nextBtn').click(function(){
        if (currentScreen < 4) {
           // lockScreen(); // overlay to prevent user clicking buttons
            if (currentScreen == 1){
                if(salary < 15000) {
                    $('#salaryInput').addClass('error');
                    $('#salaryInputError').show();
                    $('#salaryInputError').html("Please enter salary. Min 15,000");
                } else{
                    changeButtonsNext(currentScreen);
                    // currentScreen number is now set to screen we want to display
                    changeScreen(currentScreen);
                    $('#salaryInput').removeClass('error');
                    $('#salaryInputError').hide();
                    $('#salaryInputError').html('');
                }
            } else if(currentScreen == 2) {
                // currentScreen number is now set to screen we want to display
                changeScreen("LoadingPage");
            } else if(currentScreen == 3) {

                changeButtonsNext(currentScreen);
                changeScreen(currentScreen);
            } else {
                // console.log("currentScreen33: "+currentScreen);
            }
        } 
        updateCalculator();
    });

    $('#prevBtn').click(function(){

        if (currentScreen >1)
        {
            // lockScreen(); // overlay to prevent user clicking buttons
            
            var nowScreen = currentScreen;
            //changeSliderPrevious(nowScreen);
            changeButtonsPrev(nowScreen);
            if (currentScreen == 1){
                $(this).addClass("disable");
            }else{
                $(this).removeClass("disable");
                $('#nextBtn').removeClass("disable");
            }
            
            // currentScreen number is now set to screen we want to display
            changeScreen(currentScreen); 
        }
    });

changeScreen = function (showScreen){
    // take in the current screen being displayed and 
    // change to the next screen if possible
    // Update the bar chart straight after the screen has been drawn.
    // This is because heights are based on % and the screen needs to 
    // be in place before we can add the chart.
    
    if(showScreen == "LoadingPage" ){
        $('#screen2').fadeOut("500",function(){
          $("#screenLoadingPage").fadeIn("1000");
        });

        createChart();
        premiumQuote();
        annualPensionQuote();
        
    } else {
        if(showScreen == "3"){
            $('#screen1, #screen2, #screen3, #screen4').hide();
            $("#screenLoadingPage").fadeOut("500",function(){
              $('#screen'+showScreen).fadeIn("1000");
            });

            $('#progress1, #progress2, #progress3, #progress4').hide();
            $('#progress'+showScreen).show();

            $('#callback').parent().hide();
            $('#nextBtn').parent().show();

        } else {
            $('#screen1, #screen2, #screen3, #screen4').hide();
            $('#screen'+showScreen).fadeIn();

            $('#progress1, #progress2, #progress3, #progress4').hide();
            $('#progress'+showScreen).show();


            if(showScreen == "4"){
                $("#p1Age").html(age);
                $("#p1Salary").html(" â‚¬"+addCommas(salary));
                $("#p1EmployeeContribution").html(" â‚¬"+addCommas(employeeContribAmt));
                $("#p1EmployerContribution").html(" â‚¬"+addCommas(employerContribAmt));
                $("#p1PensionTarget").html(" â‚¬"+addCommas(targetIncome)); 
                
                 $('#progress3').show();
                 $('#callback').parent().show();
                 $('#nextBtn').parent().hide();
            } else{
                $('#callback').parent().hide();
                $('#nextBtn').parent().show();
            }
            

            if(showScreen>=1){
                $('#prevBtn').show();
            }
            else{
                $('#prevBtn').hide();
            }
        }
    }

    if (typeof  _gaq != 'undefined'){
        _gaq.push(['_trackPageview',window.location.pathname+'#show-screen'+showScreen]);
    }
}

changeButtonsNext = function (cs){
    // take in the current screen being displayed and 
    // depending on what the next screen is update the 
    // buttons being displayed [prev], [next] etc...
    // also update the button rel info 
    var newCurentScreen = Number(cs)+1;
    currentScreen = newCurentScreen;
}
changeButtonsPrev = function (cs){
    // take in the current screen being displayed and 
    // depending on what the next screen is update the 
    // buttons being displayed [prev], [next] etc...
    // also update the button rel info 
    var newCurentScreen = Number(cs)-1;
    currentScreen = newCurentScreen;
}


var statePerInput,contribPerInput,shortfallPerInput,
    stateAmtInput,contribAmtInput,shortfallAmtInput,
    statePerOutput,contribPerOutput,shortfallPerOutput,
    stateAmtOutput,contribAmtOutput,shortfallAmtOutput;

function premiumQuote(){
    chart.showLoading();
    var headID = document.getElementsByTagName("head")[0];
    var newScript = document.createElement('script');
    
    newScript.type = 'text/javascript';
    newScript.onload= premiumResults;
    var delayedAge = age + delay;

    if(statePension === "true") {
        stateAmtInput = 11976;
    } else {
        stateAmtInput = 0;
    }

    targetIncomeMinusState = parseInt(targetIncome) - parseInt(stateAmtInput);
    var params = "type=6&freq=Y&age="+ delayedAge +"&income="+ salary+"&ret=68&target="+targetIncomeMinusState+"&sp="+currentPension;

    if(navigator.appVersion.indexOf("MSIE 8.")!=-1){
        $.getScript( 'https://www.irishlife.ie/secure/submitPensionQuote.js?'+ params, premiumResults );
    }
    else if (navigator.appVersion.indexOf("MSIE 7.")!=-1) {
        $.getScript( 'https://www.irishlife.ie/secure/submitPensionQuote.js?'+ params, premiumResults );
    }
    else{
        newScript.src = 'https://www.irishlife.ie/secure/submitPensionQuote.js?' + params;
        headID.appendChild(newScript);
    }
}

function premiumResults() {
    var temp = new Array();
    var reggie = /=|&/;
    temp = result.split(reggie)
    premium = parseInt(temp[1]);
    addData();
}


function annualPensionQuote(){
    chart.showLoading();
    var headID = document.getElementsByTagName("head")[0];
    var newScript = document.createElement('script');
    
    newScript.type = 'text/javascript';
    newScript.onload= annualPensionResults;

    ap = employerContribAmt + employeeContribAmt;
    var delayedAge = age + delay;
    var params = "type=5&freq=M&age="+ delayedAge +"&income="+ salary+"&ret=68&ap="+ ap+"&sp="+currentPension;
    

    if(navigator.appVersion.indexOf("MSIE 8.")!=-1){
        $.getScript( 'https://www.irishlife.ie/secure/submitPensionQuote.js?'+ params, annualPensionResults );
    }
    else if (navigator.appVersion.indexOf("MSIE 7.")!=-1) {
        $.getScript( 'https://www.irishlife.ie/secure/submitPensionQuote.js?'+ params, annualPensionResults );
    }
    else{
        newScript.src = 'https://www.irishlife.ie/secure/submitPensionQuote.js?' + params;
        headID.appendChild(newScript);
    }


}

function annualPensionResults(){
    var temp = new Array();
    var reggie = /=|&/;
    temp = result.split(reggie)
    annualPension = parseInt(temp[5]);
    addData();
}


function createChart () {
    // console.log("**********************************************");
    // console.log("****************Creating Chart****************");
    // console.log("**********************************************");
    var options = {
        chart: {
            backgroundColor: 'rgba(0,0,0,0)',
            renderTo: 'chartContainer',
            type: 'column'
        },

        loading: {
            labelStyle: {
                top: '45%'
            }
        },

        colors: [
           '#435399', 
           '#5cc151', 
           '#F19C2B'
        ],

        title: {
            text: ''
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Pension Target'
            }
        },
        tooltip: {
            pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.2f}%)<br/>',
            shared: true
        },
        plotOptions: {
            column: {
                stacking: 'normal'
            }
        },
        series: [{
            name: 'Not Covered',
            data: [extraContributionsRequired]
        }, {
            name: 'Covered By You',
            data: [annualPension]
        }, {
            name: 'Covered By State',
            data: [stateAmtInput]
        }]
    };
    chart = new Highcharts.Chart(options);
}

function addData(){

    surpassedAmount = 0;
    var premiumPerMonth = parseInt((premium/12).toFixed(2));
    surpassedAmount = ap - premiumPerMonth;

    if (surpassedAmount > 0) {
        //target is surpassed
        $( ".bubble" ).css("display","block");
        $( ".bubble" ).animate({"width": "325px", "height":"325px"}, "slow" );
        
        $('#p1PensionGap').html(" â‚¬" + addCommas(surpassedAmount));
        $('#gapPer').html(" (Surplus per month)");
        
        $("#surpassedAmount").html(" â‚¬" + addCommas(surpassedAmount ));
        $("#pensionCalcExpectedTotalOutputFinal").html(" â‚¬" + addCommas(targetIncome) + " per year");
    } else {
        //target is still not surpassed
        $('#p1PensionGap').html(" â‚¬" + addCommas( Math.round(targetIncome - (annualPension + stateAmtInput))));
        $('#gapPer').html(" (per year)");
       $("#pensionCalcExpectedTotalOutputFinal").html(" â‚¬" + addCommas(annualPension + stateAmtInput) + " per year");
       $( ".bubble" ).animate({"width": "0px", "height":"0px"}, "slow" );
       $( ".bubble" ).css("display","none");
    }

    chart.series[0].setData([targetIncomeMinusState - annualPension]);
    chart.series[1].setData([annualPension]);
    chart.series[2].setData([stateAmtInput]);
    chart.hideLoading();

   if(currentScreen == 2) {
      changeButtonsNext(currentScreen);
      changeScreen(currentScreen);
   }
};


function emailInfo() {
    var extraInforForEmail;
    timestamp=Number(new Date());
    
    extraInforForEmail = 
      "\n\nSalary/income: " + salary +
      "\n\nAge: " + age +
      "\nCurrent Pension: " + currentPension+
      "\nState Pension: " + statePension+
      "\nEmployee Contribution :" + employeeContribAmt+ "("+ employeeContribPercent +")" +
      "\n Employer Contribution:" + employerContribAmt+ "("+ employerContribPercent +")";

    extraInforForEmail = extraInforForEmail + "\n\n#### QUOTE ####\nEuro: " + addCommas( employeeContribAmt )//prmLev
    + "\n\n#### IMPORTANT ####\nThis quote is valid for 7 days.";

    if ($("#telephone").val().length >=7 && $("#name").val() !="" ) {
        $('#phoneError').hide();
        $('#nameError').hide();
            
        var titleextra = "Term Assurance";
        var trackpageurl = window.location.pathname;
        
        if( typeof product != 'undefined' ){  
            if ( product=="wholeoflife" ){ 
                titleextra = "Whole of Life";
            } 
            else if ( product=="mortgageprotection" ){ 
                titleextra = "Mortgage Protection";
            }
        }
        
        var emailAddress = 'N/A';
        if ($("#email").val()){
            emailAddress = $("#email").val();
        }
        
        sendClickToCallback (
            'Q',
            ''+$("#name").val(),
            ''+$("#telephone").val(),
            emailAddress,
            ''+$('#callTime').val(),
            titleextra+' - PROCESS COMPLETE (time: '+timestamp+')',
            extraInforForEmail,
            be,
            se,
            ee
        );

        function be(){}
        function se(){}
        function ee(){}
        var quoteType = "T";
        if ( $("#email").val() ) {
           mkAssociateLeadPensionQuote(''+ $("#name").val(),'NULL' , emailAddress, ''+$("#telephone").val(), age, salary, employerContribAmt, Math.round(targetIncome - (annualPension + stateAmtInput)), 68, currentPension, targetIncome, employeeContribAmt,""+$("#callTime").val());
        }

        $("#screen4").fadeOut("500",function(){
            $("#prevBtn").hide();
            $("#callback").hide();
            $(".progressImg").hide();
            $("#screen5").fadeIn("1000");
        });
        
        if (_gaq) {
            _gaq.push(['_trackEvent','Click to callback', 'Times',$('#callTime').val()]);
            _gaq.push(['_trackPageview',trackpageurl+'#callback']);
            mkVisitWebPage(trackpageurl+'#callback');
        }
    }
    else {
        if ($("#telephone").val().length < 7){$('#phoneError').show();}else{$('#phoneError').hide();}
        if ($("#name").val() ==""){$('#nameError').show();}else{$('#nameError').hide();}
    }
    return false;
};

})(jQuery);