//##################################################################
// This js file should not be included anywhere it is not required.
//
// This is the javascript for the Commission projection estimates
// tool on bline.ie
//

$(document).ready(function () {

$(document).foundation('joyride', 'start');
	var option="";

	/*
	for (i=0;i<=20;i++){
		if(i==4){
			option += '<option selected="selected" value="'+i*5+'">'+i*5+'%</option>';
		}
		else{
		option += '<option value="'+i*5+'">'+i*5+'%</option>';
		}
	}

	$('#fundType1,#fundType2,#fundType3,#fundType4,#fundType5').html(option);
	$('#fundType1,#fundType2,#fundType3,#fundType4,#fundType5').trigger('change');
*/
	$('#fundType1,#fundType2,#fundType3,#fundType4,#fundType5').change(function(){
		setCommissionProfilePercentTotal();
	});
	
	$('#LapseRate').change(function(){
		// Log an update to the user on the screen
		a.log("Lapse Rate set to "+$('#LapseRate').val()+"%");
	});
	
		if (!Modernizr.svg) {
		$('.svg-irishlifelogo-white').attr("src", "/uploadedImages/bline/foundation_responsive/img/irishlife-logo-white.png");
		$('.svg-blinelogo').attr("src", "/uploadedImages/bline/foundation_responsive/img/bline-logo.png");
		$('.search-svg').attr("src", "/uploadedImages/bline/foundation_responsive/img/search-icon.png");
	}
});




//######################################################################
// Global variables and functions for this page
alertify.set({ delay : 2000 }); // 2s
var
a = alertify,
l = a.log;
			

// Get the total of the 5 profile types
getCommissionProfilePercentTotal = function(){
	var f1,f2,f3,f4,f5,total;
	f1 = $('#fundType1').val();
	f2 = $('#fundType2').val();
	f3 = $('#fundType3').val();
	f4 = $('#fundType4').val();
	f5 = $('#fundType5').val();
	total = +f1 + +f2 + +f3 + +f4 + +f5;
	return total;

};

// Set the percent based on the screen dropdowns
setCommissionProfilePercentTotal = function(){

	$('#commissionProfilePercentTotalError').hide();
	$('#commissionProfilePercentTotal').show();
	
	var total = getCommissionProfilePercentTotal();
	$('#commissionProfilePercentTotal').html("Total: "+total+"%");
	if(total==100){
		$('#commissionProfilePercentTotal').addClass('green');
		$('#commissionProfilePercentTotal').removeClass('red');
	}
	else
	{
		$('#commissionProfilePercentTotal').removeClass('green');
		$('#commissionProfilePercentTotal').addClass('red')
	}
	// Log an update to the user on the screen
	a.log("Breakdown Updated - Total: " +total+"%");
};

// check the totals of the breakdown
checkCommissionBreakdown = function(){
	var total = getCommissionProfilePercentTotal();
	if (total==100)
	{
		return true;
	}
	else{
		return false;
	}
};
var premiumA;
// check the premium value inputted
checkAnnualPremium = function(){


	$('#annualPremiumError').hide();
	$('#annualPremium').removeClass('error');
	
	var premium = $('#annualPremium').val();
	premiumA = premium.replace(/,/g, '').replace(/€/g, '').replace(/ /g, '');
	//premium = premium.text().replace(/€/g, '');
	if (isNaN(premiumA))
	{
		$('#annualPremiumError').html('Please enter a valid number');
		$('#annualPremiumError').show();
		
		$('#annualPremium').addClass('error');
		// console.log(premiumA);
		return false;
	}
	else if (premiumA<100 )
	{
		$('#annualPremiumError').html('Please enter an annual Premium greater than &euro;100');
		$('#annualPremiumError').show();
		
		$('#annualPremium').addClass('error');
		// console.log(premiumA);
		return false;
	}
	else if (premiumA>50000000)
	{
		$('#annualPremiumError').html('Please enter an annual premium less than &euro;50 million');
		$('#annualPremiumError').show();
		
		$('#annualPremium').addClass('error');
		// console.log(premiumA);
		return false;
	}
	else
	{
		$('#annualPremiumError').hide();		
		$('#annualPremium').removeClass('error');
		// console.log(premiumA);
		return true;
	}
};
// Button has been pressed to show the charts.
$('#showProjections').click(function(){

	var proceed = checkCommissionBreakdown();
	
	var total = getCommissionProfilePercentTotal();
	
	if(proceed)
	{
		$('#commissionProfilePercentTotalError').hide();
		$('#commissionProfilePercentTotal').show();
		var apCheck = checkAnnualPremium()
		if (apCheck){
			// console.log("Proceed with charts");
			$('#commissionProjectionForm').hide();
			$('.commissionProfileGraphs').show();
			getCommission();
			
		}
		gaqTrackPage("/ebusiness/commission-cashflow-calculator-show-projections");

	}
	else{
		$('#commissionProfilePercentTotalError').show();
		$('#commissionProfilePercentTotal').hide();
		
		a.log("Oops! Check your inputs.");
		$('#commissionProfilePercentTotalError').html("Error: The 5 profiles add up to a total of "+total+"% but they need to be 100%.");
	
	}
	 return false;
});


$('#showProjectionInputs').click(function(){

			$('.commissionProfileGraphs').fadeOut(300, function(){
				$('#commissionProjectionForm').show()
			});

			gaqTrackPage("/ebusiness/commission-cashflow-calculator-back-to-inputs");
});


//###################################################################
//###################################################################
// Create a graph stuff



function getCommission() {
	var lapse = $('#LapseRate').val()/100;
	
	var ape = "ape="+premiumA;
	var lapseRate= "&lapseRate="+lapse;
	var params = "ape=";
	
	var f1,f2,f3,f4,f5,total;
	f1 = $('#fundType1').val()/100;
	f2 = $('#fundType2').val()/100;
	f3 = $('#fundType3').val()/100;
	f4 = $('#fundType4').val()/100;
	f5 = $('#fundType5').val()/100;
	
	// console.log("hhhh "+f1);
	$.ajax({
			type: 'POST',
			url: "/servlet/lifeInsuranceIncomeProjection?"+ ape + lapseRate +"&180="+f1+"&8012="+f2+"&flat20="+f3+"&2510="+f4+"&new180="+f5+"",
			async: true,
			cache:false,
			//dataType: 'json',
			beforeSend: beforeLifeProcessCalcAjax,
			success: successLifeProcessCalcAjax,
			error: errorLifeProcessCalcAjax,
			timeout: 200000
	});
}

function beforeLifeProcessCalcAjax(){
	// console.log("Before");
}

function errorLifeProcessCalcAjax(){
	// console.log("Error");
}

function successLifeProcessCalcAjax(response){
	
	//console.log("response = " + response);
	//console.log("response.incomes[0] = " + response.incomes);
	//console.log("response[1] = " + response[1]);
	

	var colors = ['#4572A7', 
	'#89A54E', 
	'#80699B', 
	'#3D96AE',
	'#AA4643'
	];

	var colorIndex = 0;
	var commissionData = [];
	var accumulatedCommissionData = [];
	var datum;
	var accumulatedDatum;
	var profileName = "";
	var profileData = [];
	var accumulatedProfileData= [];
	
	
	var isValid = response.replace(/[\[\]]/g, "");
	isValid = isValid.split(/[,:[\[\]]/g);
	isValid.splice(0,1);
	
	for(var i = 0; i < isValid.length; i++ ) {		
		if(isValid[i][1] == "{"){
			isValid[i] = isValid[i].substring(2);
		}	
		
		if(isValid[i][isValid[i].length-2] == "}"){
			isValid[i] = isValid[i].substring( 0, isValid[i].length-2 );
		}
		
		if( isValid[i][0] == "\"" ){
			isValid[i] = isValid[i].substring( 1, isValid[i].length-1 );
		} 
		else{
			isValid[i] = parseInt(isValid[i]);
		}
		
		if(isValid[i] == ""){
			isValid.splice(i,1);
			i = i-1;
		}
	}

		
	//console.log(" sValid.length = " + isValid.length);
	
	for( var i = 0; i < isValid.length; i++ ) {	

		if ( typeof isValid[i] === "string" ) {

			//this is important becasue the regex statments takes out all the numbers of value zero
			while (typeof isValid[i+1] === "string") { 
				i = i+1;
			};

			profileName = isValid[i];
			profileData.push(isValid[i+1]);
			accumulatedProfileData.push(isValid[i+1]);
			i=i+2;
		}
		
		if ( typeof isValid[i] === "number") {
			profileData.push(isValid[i]);
			accumulatedProfileData.push((isValid[i] + accumulatedProfileData[accumulatedProfileData.length-1]));
		}

		if( typeof isValid[i + 1] === "string" ) {
			
			datum = {
				name: profileName, 
				data: profileData.slice(0,-5), //This is to shorten the number of years down from 20 to 15
				color: colors[colorIndex]
			};
			
			accumulatedDatum = {
				name: profileName, 
				data: accumulatedProfileData.slice(0,-5),
				color: colors[colorIndex]
			};

			commissionData.push(datum);
			accumulatedCommissionData.push(accumulatedDatum);
			
			colorIndex = colorIndex + 1;
			profileData = [];
			accumulatedProfileData = [];
		}
		
		if ( i == isValid.length - 1) {
			
			datum = {
				name: profileName, 
				data: profileData.slice(0,-5),
				color: colors[colorIndex]
			};
			
			accumulatedDatum = {
				name: profileName, 
				data: accumulatedProfileData.slice(0,-5),
				color: colors[colorIndex]
			};

			commissionData.push(datum);	
			accumulatedCommissionData.push(accumulatedDatum);
			
			colorIndex = colorIndex + 1;
			profileData = [];
			accumulatedProfileData = [];
		}	
	}	

	for (var i = 0; i < commissionData.length; i++) {
			if(commissionData[i].name == "New 180"){
				var scrap = commissionData[i];
				var scrap2 = accumulatedCommissionData[i]

				commissionData.splice(i, 1);
				accumulatedCommissionData.splice(i, 1);

				commissionData.unshift(scrap);
				accumulatedCommissionData.unshift(scrap2);
			}

			if(commissionData[i].name == "Flat 20"){
				
				var scrap = commissionData[i];
				var scrap2 = accumulatedCommissionData[i]

				commissionData.splice(i, 1);
				accumulatedCommissionData.splice(i, 1);

				commissionData.push(scrap);
				accumulatedCommissionData.push(scrap2);
			}

		};

	// for (var i = 0; i < accumulatedCommissionData.length; i++) {
	//  	console.log( accumulatedCommissionData[i].name + " = " + accumulatedCommissionData[i].data);
	// };


	
	createCommissionGraph( commissionData );
	createCommissionTable( commissionData );
	createAccumulatedGraph( accumulatedCommissionData );
	createAccumulatedTable( accumulatedCommissionData );
}


function createCommissionTable( data ){

	var yearTotals = [];
	var total = 0;
	var temp = new Array();
	// this will return an array with strings "1", "2", etc.
	var tempText = data[0]['data'];
	//console.log(data.length+" ###");
	
	var tempHTML 	= "<br/><br/><table style='font-size:0.75em'>";
		tempHTML 		+= "<thead><tr>";
		tempHTML 		+= "<th> </th>";
	for (y=0;y<tempText.length; y++){	
		tempHTML 		+= "<th>"+ Number(2013 + y) +"</th>";
	}
	tempHTML 		+= "<th>Total</th>";
	tempHTML 		+= "</tr></thead><tbody>";
		
	for (x=0;x<data.length; x++){	

		tempHTML 		+= "<tr>";
		tempHTML 		+= "<td>"+data[x]['name']+"</td>";

		for(i=0;i<tempText.length; i++)
		{
			if(typeof yearTotals[i] !== 'undefined'){
				yearTotals[i] += data[x]['data'][i];
			}
			else {

				yearTotals.push(data[x]['data'][i]);
			}

			tempHTML  += "<td>&euro;"+data[x]['data'][i]+"</td>";
			total = total + parseInt(data[x]['data'][i]);
		}

		tempHTML  += "<td>&euro;"+ total +"</td>";
		total = 0;
		tempHTML  += "</tr>";
	}


	tempHTML 		+= "<tr>";
	tempHTML  += "<td>Total</td>";

	for (var i = 0; i < yearTotals.length; i++) {
		tempHTML  += "<td><b>&euro;"+ yearTotals[i] +"</b></td>";
	};
	
	tempHTML 		+= "</tr>";


		tempHTML  += "</tbody></table>";
	
	$('#tableContainer').html(tempHTML);

}



function createAccumulatedTable( data ){
	var yearTotals = [];
	var total = 0;
	var temp = new Array();
	// this will return an array with strings "1", "2", etc.
	var tempText = data[0]['data'];
	// console.log(data.length+" ###");
	
	var tempHTML 	= "<br/><br/><table style='font-size:0.75em'>";
		tempHTML 		+= "<thead><tr>";
		tempHTML 		+= "<th> </th>";
	for (y=0;y<tempText.length; y++){	
		tempHTML 		+= "<th>"+ Number(2013 + y) +"</th>";
	}
	tempHTML 		+= "<th>Total</th>";
	tempHTML 		+= "</tr></thead><tbody>";
		
	for (x=0;x<data.length; x++){	
		tempHTML 		+= "<tr>";
		tempHTML 		+= "<td>"+data[x]['name']+"</td>";
		for(i=0;i<tempText.length; i++)
		{
			if(typeof yearTotals[i] !== 'undefined'){
				yearTotals[i] += data[x]['data'][i];
			}
			else {

				yearTotals.push(data[x]['data'][i]);
			}

			tempHTML  += "<td>&euro;"+data[x]['data'][i]+"</td>";
			total = total + parseInt(data[x]['data'][i]);
		}
		
		tempHTML  += "<td>&euro;"+ total +"</td>";
		total = 0;
		tempHTML  += "</tr>";
	}

	tempHTML 		+= "<tr>";
	tempHTML  += "<td>Total</td>";

	for (var i = 0; i < yearTotals.length; i++) {
		tempHTML  += "<td><b>&euro;"+ yearTotals[i] +"</b></td>";
	};
	
	tempHTML 		+= "</tr>";

	tempHTML  += "</tbody></table>";
	
	$('#tableContainer2').html(tempHTML);

}
function createCommissionGraph( data ){

	var allMax = [];
	
	for ( var i = 0; i < data.length; i++ ) {
		allMax.push( Math.max.apply( null, data[i].data) );	
	}

	var max = Math.max.apply( null, allMax );
	
	var tickInterval = roundUp(max)/5;



	$('#container').highcharts({
		chart: {
			type: 'line',
			marginRight: 130,
			marginBottom: 55
		},
		title: {
			text: 'Commission',
			x: -20 //center
		},
	
		yAxis: {
			title: {
				text: 'Amount in euros'
			},
			plotLines: [{
				value: 0,
				width: 1,
				color: '#808080'
			}],
			
			tickInterval: tickInterval
		},
		xAxis: {
			categories: [' year 1', ' year 2', ' year 3',' year 4', 'year 5', ' year 6',' year 7', ' year 8', ' year 9',' year 10', 
			' year 11', ' year 12',' year 13', ' year 14', ' year 15'],
		
			title: {
				text: 'Number of years',
				margin:0,
				offset: 40
			},
			tickInterval: 1
		},
		
		tooltip: {
			valuePrefix: '€',
			shared:true,
			crosshairs: true			
		},
		
		 plotOptions: {
            series: {
                marker: {
                    enabled: false
                }
            }
        },
		
		legend: {
			layout: 'vertical',
			align: 'right',
			verticalAlign: 'top',
			x: -10,
			y: 100,
			borderWidth: 0
		},
		series: data
	});
};


function createAccumulatedGraph( data ){

	var allMax = [];
	
	for ( var i = 0; i < data.length; i++ ) {
		allMax.push( Math.max.apply( null, data[i].data) );	
	}

	var max = Math.max.apply( null, allMax );
	var tickInterval = roundUp(max)/5;


	$('#container2').highcharts({
		chart: {
			type: 'line',
			marginRight: 130,
			marginBottom: 55
		},
		title: {
			text: 'Accumulated Commission',
			x: -20 //center
		},
	
		yAxis: {
			title: {
				text: 'Amount in euros'
			},
			
			startOnTick: false,
			
			plotLines: [{
				value: 0,
				width: 1,
				color: '#808080'
			}],
			
			tickInterval: tickInterval
		},
		xAxis: {
			categories: ['year 1', 'year 2', 'year 3','year 4', 'year 5', 'year 6','year 7', 'year 8', 'year 9','year 10',
			'year 11', 'year 12','year 13', 'year 14', 'year 15'],
	
			title: {
				text: 'Number of years',
				margin:0,
				offset: 40
			},
			tickInterval: 1
		},
		
		tooltip: {
			valuePrefix: '€',
			shared:true,
			crosshairs: true			
		},
		
		 plotOptions: {
            series: {
                marker: {
                    enabled: false
                }
            }
        },
		
		legend: {
			layout: 'vertical',
			align: 'right',
			verticalAlign: 'top',
			x: -10,
			y: 100,
			borderWidth: 0
		},
		series: data
	});
};

function roundUp(x){

    var y = Math.pow(10, x.toString().length-1);

    x = (x/y);
    x = Math.ceil(x);
    x = x*y;
    return x;
}